<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>yuking11's blog</title>
  <id>http://yuking11.net/blog/</id>
  <link href="http://yuking11.net/blog"/>
  <link href="http://yuking11.net/blog/feed.xml" rel="self"/>
  <updated>2014-02-03T14:52:00Z</updated>
  <author>
    <name>yuking11</name>
  </author>
  <entry>
    <title>Middlemanで静的サイトを作る【Mac】</title>
    <link rel="alternate" href="/blog/2014/02/03/start-middleman.html"/>
    <id>/blog/2014/02/03/start-middleman.html</id>
    <published>2014-02-03T14:52:00Z</published>
    <updated>2014-02-03T14:52:00Z</updated>
    <author>
      <name>yuking11</name>
    </author>
    <content type="html">&lt;p&gt;普通にhtml/cssを書いてサイト作るのもいいけど、もう少しステップアップというかなんというかぶっちゃけ&lt;strong&gt;エンジニアっぽいことしたい！&lt;/strong&gt;&lt;br&gt;
そんな方にオススメなのが「&lt;a href="http://middlemanapp.com/jp/"&gt;Middleman&lt;/a&gt;」というRuby製静的サイトジェネレーター。&lt;/p&gt;

&lt;p&gt;静的サイトジェネレーターは他に&lt;a href="http://jekyllrb.com/"&gt;jekyll&lt;/a&gt;、&lt;a href="http://roots.cx/"&gt;roots&lt;/a&gt;といったものがあるらしく色々調べてみたのですが、公式サイトがほぼ英語。もうすっごい英語。&lt;/p&gt;

&lt;p&gt;「ふむ、なるほど、全然わからん。」&lt;/p&gt;

&lt;p&gt;その点Middlemanは有志の方々による日本語化ドキュメントが充実しており、技術力のみならず英語力も平凡な僕は非常にとっつきやすかったです。&lt;/p&gt;

&lt;p&gt;というわけで今回はインストールからサイト構築までをやっていこうと思います。&lt;br&gt;
&lt;strong&gt;環境はMac、OS XなのでWindowsの人のお役には立てませんゴメンナサイ。&lt;/strong&gt;&lt;/p&gt;

&lt;h2&gt;Middlemanで出来ること&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;開発用ローカルサーバーで確認出来る&lt;/li&gt;
&lt;li&gt;Livereload（自動更新）もできる ※要設定&lt;/li&gt;
&lt;li&gt;いろんなテンプレートが使える&lt;/li&gt;
&lt;li&gt;Sass＆Compassが使える&lt;/li&gt;
&lt;li&gt;CoffeeScriptも使える&lt;/li&gt;
&lt;li&gt;html/css/jsをminify出力してくれる&lt;/li&gt;
&lt;li&gt;その他もろもろ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;SassとかHamlとか使えるのがなんという俺得。&lt;/p&gt;

&lt;h2&gt;インストール&lt;/h2&gt;

&lt;p&gt;Mac OS Xの場合Xcode Command line toolsが必要なので、&lt;a href="http://itunes.apple.com/us/app/xcode/id497799835?ls=1&amp;amp;amp;amp;amp;mt=12"&gt;Mac App Store&lt;/a&gt;からインストールしておきます。&lt;/p&gt;

&lt;p&gt;続いて本体。&lt;br&gt;
ターミナルを立ち上げて下記を入力し、小指で勢いよくEnterを押す。ターン！&lt;/p&gt;

&lt;pre&gt;&lt;code class="bsh"&gt;gem install middleman
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;楽だ。。。&lt;/p&gt;

&lt;p&gt;ちゃんとインストール出来たか確認。&lt;/p&gt;

&lt;pre&gt;&lt;code class="bsh"&gt;middleman version
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;するとMiddleman 3.2.2と表示されました。&lt;br&gt;
バージョン3.2.2がインストールされたみたいです。やったね。&lt;/p&gt;

&lt;h2&gt;プロジェクト作成&lt;/h2&gt;

&lt;pre&gt;&lt;code class="bsh"&gt;middleman init test_project
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;これでtest_projectディレクトリが作成され、その中にMiddlemanに必要なライブラリなどがインストールされます。&lt;br&gt;
※test_projectには任意の名前を入れてください&lt;/p&gt;

&lt;pre&gt;&lt;code class="bsh"&gt;      create  test_project/Gemfile
         run  bundle install from &amp;quot;.&amp;quot;
Fetching gem metadata from http://rubygems.org/........
Fetching additional metadata from http://rubygems.org/..
Resolving dependencies...
Using i18n (0.6.9)
Using multi_json (1.8.4)
Using activesupport (3.2.16)
Using bundler (1.5.2)
〜〜〜略〜〜〜
Your bundle is complete!
Use `bundle show [gemname]` to see where a bundled gem is installed.
      create  test_project/.gitignore
      create  test_project/config.rb
      create  test_project/source/index.html.erb
      create  test_project/source/layouts/layout.erb
      create  test_project/source/stylesheets
      create  test_project/source/stylesheets/all.css
      create  test_project/source/stylesheets/normalize.css
      create  test_project/source/javascripts
      create  test_project/source/javascripts/all.js
      create  test_project/source/images
      create  test_project/source/images/background.png
      create  test_project/source/images/middleman.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;生成されました。&lt;/p&gt;

&lt;p&gt;中身はこんな感じです。&lt;/p&gt;

&lt;pre&gt;&lt;code class="bsh"&gt;test_project
├── Gemfile
├── Gemfile.lock
├── config.rb
└── source
　　　├── images
　　　│　　├── background.png
　　　│　　└── middleman.png
　　　├── index.html.erb
　　　├── javascripts
　　　│　　└── all.js
　　　├── layouts
　　　│　　└── layout.erb
　　　└── stylesheets
　　　　　　├── all.css
　　　　　　└── normalize.css
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;サーバーを起動、ブラウザでアクセス&lt;/h2&gt;

&lt;p&gt;html.erbって何じゃいという疑問は置いといて、もうこの状態で環境は出来上がっているので早速ブラウザで確認します。&lt;/p&gt;

&lt;p&gt;そのためにはまずディレクトリに移動して、ローカルサーバーを立ち上げます。&lt;/p&gt;

&lt;pre&gt;&lt;code class="bsh"&gt;cd test_project
middleman server
(middleman s でも可)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;すると&lt;/p&gt;

&lt;pre&gt;&lt;code class="bsh"&gt;== The Middleman is loading
== The Middleman is standing watch at http://0.0.0.0:4567
== Inspect your site configuration at http://0.0.0.0:4567/__middleman/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と表示されました。&lt;br&gt;
なにやらURLが書いてあるぞ……&lt;/p&gt;

&lt;p&gt;http://0.0.0.0:4567 にアクセスすると……&lt;/p&gt;

&lt;p&gt;&lt;img alt="Middleman Image" src="/blog/2014/02/03/start-middleman/2014-02-05_01.png" /&gt;&lt;/p&gt;

&lt;p&gt;ぼい〜んって感じでアニメーションしつつMiddlemanのロゴが出てきました！キモい！&lt;/p&gt;

&lt;p&gt;以後、先ほど生成されたファイルを編集することであなた好みのウェブサイトが出来上がっていきます。&lt;/p&gt;

&lt;p&gt;ちなみにサーバーを停めたいときはターミナル上で Ctrl+C を押しましょう。&lt;/p&gt;

&lt;h2&gt;静的ファイルの書き出し&lt;/h2&gt;

&lt;p&gt;最後の仕上げ、生成/編集したファイルを静的ファイルとして書き出しましょう。&lt;br&gt;
ローカルサーバーを停止している状態で、ターミナルから&lt;/p&gt;

&lt;pre&gt;&lt;code class="bsh"&gt;middleman build
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;と打つと&lt;/p&gt;

&lt;pre&gt;&lt;code class="bsh"&gt;create  build/images/background.png
create  build/images/middleman.png
create  build/javascripts/all.js
create  build/stylesheets/normalize.css
create  build/stylesheets/all.css
create  build/index.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;buildディレクトリに静的ファイルが生成されました！&lt;br&gt;
なるほど、index.html.erbがindex.htmlとして生成されるんですね。&lt;/p&gt;

&lt;p&gt;あとはbuildディレクトリ内のファイルをサーバーにアップロードすればOK！&lt;/p&gt;

&lt;hr&gt;

&lt;p&gt;以上、ざっくりとインストールからサイト構築までやってみました。&lt;/p&gt;

&lt;p&gt;これだけだと何が良いのかまったくわからないような気がしますが、冒頭で挙げた色々なテンプレート、設定を加えていくことでWeb開発がかなり楽になると思います。&lt;/p&gt;

&lt;p&gt;その辺りのことはまた今度。&lt;/p&gt;

&lt;p&gt;おわり。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>Middlemanでblog始めました</title>
    <link rel="alternate" href="/blog/2014/01/20/start-blog.html"/>
    <id>/blog/2014/01/20/start-blog.html</id>
    <published>2014-01-20T13:56:00Z</published>
    <updated>2014-01-20T13:56:00Z</updated>
    <author>
      <name>yuking11</name>
    </author>
    <content type="html">&lt;p&gt;2014年、何か新しいことにチャレンジしてみようか、と思い立ってWeb制作に関するblogを始めることにしました。&lt;/p&gt;

&lt;p&gt;マークアップエンジニアとしてWeb制作に関わってきた中で、htmlのこと、cssのこと、javascriptのこと等々、幾度となくGoogle先生にお世話になったのですが、知りたいことがピンポイントで見つからず苦労することも多々ありました。&lt;/p&gt;

&lt;p&gt;というのは表向きの理由で実際のところは備忘録的意味合いが大きかったり。&lt;/p&gt;

&lt;p&gt;で、始めるにあたってまず環境どうすっぺ、と考えていたところ「&lt;a href="http://middlemanapp.com/jp/"&gt;Middleman&lt;/a&gt;オヌヌメ」と同僚からの助言。なんのこっちゃと思い調べてみると&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Middleman はモダンな web 開発のあらゆるショートカットやツールを採用した静的サイトジェネレータです。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;とのこと。&lt;br&gt;
しかもblog機能までついている。なるほど、こりゃあいい。採用。&lt;br&gt;
さらに調べてみると、&lt;a href="http://pages.github.com/"&gt;Github Pages&lt;/a&gt;でホストすると捗るらしいことが判明。採用。&lt;/p&gt;

&lt;p&gt;そんなこんなで色々あってMiddleman blog＆Github Pagesという環境でblogをスタートすることになりました。&lt;/p&gt;

&lt;p&gt;「色々」の部分（Middlemanの構築方法とか）が大事なわけですが、その当たりはおいおい紹介していこうと思います。&lt;/p&gt;

&lt;p&gt;とりあえずしょっぱなはこんなところで。&lt;/p&gt;

&lt;p&gt;おわり。&lt;/p&gt;
</content>
  </entry>
</feed>
